<?xml version="1.0"?>
<robot name="car_chassis_2diff" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- PROPERTY LIST --> 
  <xacro:property name="PI" value="3.14159265359"/>

  <!-- Below define lf, rt need "-" -->
  <xacro:property name="wheel_mass" value="0.05"/>
  <xacro:property name="wheel_radius" value="0.03"/>
  <xacro:property name="wheel_length" value="0.01"/>
  <xacro:property name="wheel_joint_x" value="0.0"/>
  <xacro:property name="wheel_joint_y" value="0.02"/>
  <xacro:property name="wheel_joint_z" value="0.0"/>

  <xacro:property name="motor_mass" value="0.1"/>
  <xacro:property name="motor_radius" value="0.01"/>
  <xacro:property name="motor_length" value="0.04"/>
  <xacro:property name="motor_joint_x" value="0"/>
  <xacro:property name="motor_joint_y" value="0.15"/>
  <xacro:property name="motor_joint_z" value="-0.03"/>

  <xacro:property name="caster_mass" value="0.05"/>
  <xacro:property name="caster_radius" value="0.03"/>
  <xacro:property name="caster_joint_x" value="0.15"/>
  <xacro:property name="caster_joint_y" value="0"/>
  <xacro:property name="caster_joint_z" value="-0.03"/>

  <xacro:property name="base_mass" value="0.3"/>
  <xacro:property name="base_radius" value="0.2"/>
  <xacro:property name="base_length" value="0.08"/>

  <!-- Defining the colors used in this robot -->
  <material name="blue">
    <color rgba="0.5 0.5 1 0.8"/>
  </material>

  <!-- Inertial matrix solution -->>
  <xacro:macro name="sphere_inertial" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
               iyy="${2*m*r*r/5}" iyz="0" izz="${2*m*r*r/5}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertial" params="m r h">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${m*(3*r*r+h*h)/12}" ixy="0" ixz="0"
               iyy="${m*(3*r*r+h*h)/12}" iyz="0" izz="${m*r*r/2}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="box_inertial" params="m x y z">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${m*(y*y+z*z)/12}" ixy="0" ixz="0"
               iyy="${m*(x*x+z*z)/12}" iyz="0" izz="${m*(x*x+y*y)/12}"/>
    </inertial>
  </xacro:macro>

  <!-- Macro for robot base -->  
  <xacro:macro name="base" >
    <link name="base_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${base_radius}" length="${base_length}"/>
        </geometry>
        <material name="blue"/>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${base_radius}" length="${base_length}"/>
        </geometry>
        <material name="blue"/>
      </collision>

      <xacro:cylinder_inertial m="${base_mass}" r="${base_radius}" h="${base_length}"/>
    </link>

    <gazebo reference="base_link">
      <material>Gazebo/Orange</material>
    </gazebo>
    
  </xacro:macro>

  <!-- Macro for robot caster -->
  <xacro:macro name="caster">
    <joint name="caster_joint" type="fixed">
      <origin xyz="${caster_joint_x} ${caster_joint_y} ${caster_joint_z}" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="caster_link"/>
    </joint>

    <link name="caster_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_radius}"/>
        </geometry>
        <material name="blue"/>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_radius}"/>
        </geometry>
        <material name="blue"/>
      </collision>

      <xacro:sphere_inertial m="${caster_mass}" r="${caster_radius}"/>
    </link>

    <gazebo reference="caster_link">
      <material>Gazebo/Blue</material>
    </gazebo>

  </xacro:macro>

  <!-- Macro for robot motor -->
  <xacro:macro name="motor" params="loc_prefix l_r">
    <joint name="${loc_prefix}_motor_joint" type="fixed">
      <origin xyz="${motor_joint_x} ${l_r*motor_joint_y} ${motor_joint_z}" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="${loc_prefix}_motor_link"/>
    </joint>

    <link name="${loc_prefix}_motor_link">
      <visual>
        <origin xyz="0 0 0" rpy="${l_r*PI/2} 0 0"/>
        <geometry>
          <cylinder radius="${motor_radius}" length="${motor_length}"/>
        </geometry>
        <material name="blue"/>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${l_r*PI/2} 0 0"/>
        <geometry>
          <cylinder radius="${motor_radius}" length="${motor_length}"/>
        </geometry>
        <material name="blue"/>
      </collision>

      <xacro:cylinder_inertial m="${motor_mass}" r="${motor_radius}" h="${motor_length}"/>
    </link>

    <gazebo reference="${loc_prefix}_motor_link">
      <material>Gazebo/Red</material>
    </gazebo>

  </xacro:macro>

  <!-- Macro for robot wheel -->
  <xacro:macro name="wheel" params="loc_prefix l_r">
    <joint name="${loc_prefix}_wheel_joint" type="continuous">
      <origin xyz="${wheel_joint_x} ${l_r*wheel_joint_y} ${wheel_joint_z}" rpy="0 0 0"/>
      <parent link="${loc_prefix}_motor_link"/>
      <child link="${loc_prefix}_wheel_link"/>
      <axis xyz="0 1 0"/>
    </joint>

    <link name="${loc_prefix}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${l_r*PI/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
        </geometry>
        <material name="blue"/>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${l_r*PI/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertial m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}"/>
    </link>

    <gazebo reference="${loc_prefix}_wheel_link">
      <material>Gazebo/Orange</material>
    </gazebo>

    <!-- Connect wheel to motor -->
    <transmission name="${loc_prefix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${loc_prefix}_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${loc_prefix}_wheel_joint">
        <handwareInterface>VelocityJointInterface</handwareInterface>
      </joint>
    </transmission>

    <xacro:motor loc_prefix="${loc_prefix}" l_r="${l_r}"/>
  </xacro:macro>

  <xacro:macro name="car_chassis_2diff">
    <!-- Make footprint as root -->
    <link name="base_footprint">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.001 0.001 0.001"/>
        </geometry>
      </visual>
    </link>
    <gazebo reference="base_footprint">
      <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <joint name="base_footprint_joint" type="fixed">
      <origin xyz="0 0 ${wheel_radius-wheel_joint_z-motor_joint_z}" rpy="0 0 0"/>
      <parent link="base_footprint"/>
      <child link="base_link"/>
    </joint>

    <!-- Make a 2diff car chassis -->
    <xacro:base />
    <xacro:wheel loc_prefix="lf" l_r="1"/>
    <xacro:wheel loc_prefix="rt" l_r="-1"/>
    <xacro:caster />

    <!-- Controller -->
    <gazebo>
      <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <!-- <alwaysOn>true</alwaysOn>
        <legacyMode>true</legacyMode>
        <torque>200</torque> -->

        <updateRate>100</updateRate>
        <leftJoint>lf_wheel_joint</leftJoint>
        <rightJoint>rt_wheel_joint</rightJoint>
        <wheelSeparation>${2*(motor_joint_y+wheel_joint_y)}</wheelSeparation>
        <wheelDiameter>${2*wheel_radius}</wheelDiameter>
        <wheelAcceleration>1.0</wheelAcceleration>
        <wheelTorque>5</wheelTorque>
        <commandTopic>cmd_vel</commandTopic>
        <odometryFrame>odom</odometryFrame>
        <robotBaseFrame>base_footprint</robotBaseFrame>
        <rosDebugLevel>na</rosDebugLevel>
        <odometryTopic>odom</odometryTopic>
        <publishWheelTF>false</publishWheelTF>
        <publishOdomTF>true</publishOdomTF>
        <publishWheelJointState>false</publishWheelJointState>
        <odometrySource>world</odometrySource>
        <publishTf>1</publishTf>
      </plugin>
    </gazebo>
  </xacro:macro>

</robot>